CREATE SCHEMA IF NOT EXISTS dbo;

CREATE TABLE dbo.DM_PERSONS (
  PERSON_ID bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT XPKDM_PERSONS PRIMARY KEY,
  SSDA903_ID varchar(10),
  NHS_ID numeric(10),
  SCN_ID numeric(9),
  UPN_ID varchar(13),
  FORMER_UPN_ID varchar(13),
  FULL_NAME varchar(62) NOT NULL,
  TITLE varchar(8),
  FIRST_NAME varchar(30),
  LAST_NAME varchar(30),
  DATE_OF_BIRTH timestamp,
  DATE_OF_DEATH timestamp,
  GENDER varchar(1),
  RESTRICTED varchar(1),
  PERSON_ID_LEGACY varchar(16),
  FULL_ETHNICITY_CODE varchar(33),
  COUNTRY_OF_BIRTH_CODE varchar(16),
  IS_CHILD_LEGACY varchar(1),
  IS_ADULT_LEGACY varchar(1),
  NATIONALITY varchar(80),
  RELIGION varchar(80),
  MARITAL_STATUS varchar(80),
  FIRST_LANGUAGE varchar(100),
  FLUENCY_IN_ENGLISH varchar(100),
  EMAIL_ADDRESS varchar(240),
  CONTEXT_FLAG varchar(1),
  SCRA_ID varchar(13),
  INTERPRETER_REQUIRED varchar(1),
  FROM_DM_PERSON varchar(1)
);

CREATE INDEX xif1dm_persons ON dbo.DM_PERSONS (FULL_ETHNICITY_CODE);

CREATE UNIQUE INDEX xif2dm_persons ON dbo.DM_PERSONS (PERSON_ID_LEGACY);

-- alter person table to support longer names
ALTER TABLE dbo.DM_PERSONS
  ALTER COLUMN FIRST_NAME TYPE varchar(100);

ALTER TABLE dbo.DM_PERSONS
  ALTER COLUMN LAST_NAME TYPE varchar(100);

ALTER TABLE dbo.DM_PERSONS
  ALTER COLUMN FULL_NAME TYPE varchar(255);

--add additional columns required by the interim solution
ALTER TABLE dbo.DM_PERSONS
  ADD COLUMN SCCV_SEXUAL_ORIENTATION varchar(100);

ALTER TABLE dbo.DM_PERSONS
  ADD COLUMN SCCV_PREFERRED_METHOD_OF_CONTACT varchar(100);

-- for audit
ALTER TABLE dbo.DM_PERSONS
  ADD COLUMN SCCV_CREATED_AT timestamp;

ALTER TABLE dbo.DM_PERSONS
  ADD COLUMN SCCV_CREATED_BY varchar(300);

ALTER TABLE dbo.DM_PERSONS
  ADD COLUMN SCCV_LAST_MODIFIED_AT timestamp;

ALTER TABLE dbo.DM_PERSONS
  ADD COLUMN SCCV_LAST_MODIFIED_BY varchar(300);

---- sequence used to generate values for REF_ADDRESS_ID. Start at 510000 is arbitrary.
CREATE SEQUENCE dbo.dm_addresses_ref_address_id_seq
  START 510000;

CREATE TABLE dbo.DM_ADDRESSES (
  REF_ADDRESSES_PEOPLE_ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT XPKDM_ADDRESSES PRIMARY KEY,
  REF_ADDRESS_ID numeric(9) NOT NULL DEFAULT NEXTVAL('dbo.dm_addresses_ref_address_id_seq'),
  PERSON_ID numeric(16),
  START_DATE timestamp,
  END_DATE timestamp,
  ADDRESS varchar(464),
  POST_CODE varchar(16),
  DISTRICT varchar(80),
  PAF_AUTHORITY varchar(80),
  WARD varchar(80),
  IS_IN_LA_AREA varchar(1),
  ADDRESS_TYPE varchar(16),
  IS_CONTACT_ADDRESS varchar(1),
  IS_DISPLAY_ADDRESS varchar(1),
  HOUSING_TENURE varchar(16),
  IS_HMO varchar(1),
  OZ_LGA_NAME varchar(80),
  OZ_LGA_NUMBER numeric(9),
  OZ_SLA_ID numeric(9),
  OZ_LHD_ID numeric(9),
  OZ_HACC_ID numeric(9),
  OZ_PHAMS_ID numeric(9),
  ACCESS_NOTES varchar(2000),
  EASTING numeric(10, 2),
  NORTHING numeric(10, 2),
  UNIQUE_ID numeric(15),
  FROM_DM_PERSON varchar(1)
);

ALTER TABLE dbo.DM_ADDRESSES
  ADD COLUMN SCCV_CREATED_AT timestamp;

ALTER TABLE dbo.DM_ADDRESSES
  ADD COLUMN SCCV_CREATED_BY varchar(300);

ALTER TABLE dbo.DM_ADDRESSES
  ADD COLUMN SCCV_LAST_MODIFIED_AT timestamp;

ALTER TABLE dbo.DM_ADDRESSES
  ADD COLUMN SCCV_LAST_MODIFIED_BY varchar(300);

--support for data import
CREATE TABLE dbo.SCCV_PERSONS_IMPORT (
  PERSON_ID varchar(100) NOT NULL CONSTRAINT XPKDM_PERSONS_IMPORT PRIMARY KEY,
  SSDA903_ID varchar(10),
  NHS_ID numeric(10),
  SCN_ID numeric(9),
  UPN_ID varchar(13),
  FORMER_UPN_ID varchar(13),
  FULL_NAME varchar(255) NOT NULL,
  TITLE varchar(8),
  FIRST_NAME varchar(100),
  LAST_NAME varchar(100),
  DATE_OF_BIRTH timestamp,
  DATE_OF_DEATH timestamp,
  GENDER varchar(1),
  RESTRICTED varchar(1),
  PERSON_ID_LEGACY varchar(16),
  FULL_ETHNICITY_CODE varchar(33),
  COUNTRY_OF_BIRTH_CODE varchar(16),
  IS_CHILD_LEGACY varchar(1),
  IS_ADULT_LEGACY varchar(1),
  NATIONALITY varchar(80),
  RELIGION varchar(80),
  MARITAL_STATUS varchar(80),
  FIRST_LANGUAGE varchar(100),
  FLUENCY_IN_ENGLISH varchar(100),
  EMAIL_ADDRESS varchar(240),
  CONTEXT_FLAG varchar(1),
  SCRA_ID varchar(13),
  INTERPRETER_REQUIRED varchar(1),
  FROM_DM_PERSON varchar(1)
);

CREATE TABLE dbo.SCCV_PERSONS_LOOKUP (
  PERSON_ID varchar(100) NOT NULL CONSTRAINT XPKDM_PERSONS_LOOKUP PRIMARY KEY,
  NC_ID varchar(100) NOT NULL,
  CREATED_ON timestamp NOT NULL DEFAULT now(),
  CONSTRAINT unique_ids UNIQUE (NC_ID)
);

CREATE TABLE dbo.SCCV_ALLOCATIONS (
  MOSAIC_ID varchar(100) NOT NULL,
  FULL_NAME varchar(255) NOT NULL,
  GROUP_ID bigint,
  ETHNICITY varchar(33),
  SUB_ETHNICITY varchar(33),
  RELIGION varchar(30),
  GENDER varchar(1),
  DATE_OF_BIRTH timestamp,
  SERVICE_USER_GROUP varchar(30),
  SCHOOL_NAME varchar(255),
  SCHOOL_ADDRESS varchar(255),
  GP_NAME varchar(62),
  GP_ADDRESS varchar(150),
  GP_SURGERY varchar(100),
  ALLOCATED_WORKER varchar(90),
  WORKER_TYPE varchar(100),
  ALLOCATED_WORKER_TEAM varchar(50),
  TEAM_NAME varchar(50),
  ALLOCATION_START_DATE timestamp,
  ALLOCATION_END_DATE timestamp,
  LEGAL_STATUS varchar(255),
  PLACEMENT varchar(255),
  ON_CP_REGISTER varchar(3),
  CONTACT_ADDRESS varchar(255),
  CASE_STATUS_OPEN_CLOSED varchar(7),
  CLOSURE_DATE_IF_CLOSED timestamp,
  LAST_NAME varchar(100),
  FIRST_NAME varchar(100),
  WORKER_EMAIL varchar(62),
  LAC varchar(10)
);

-- new simplified allocations table. Person, worker and team details are now available in separate tables
CREATE TABLE dbo.SCCV_ALLOCATIONS_COMBINED (
  ID serial PRIMARY KEY,
  MOSAIC_ID bigint NOT NULL,
  WORKER_ID bigint,
  ALLOCATION_START_DATE timestamp,
  ALLOCATION_END_DATE timestamp,
  CASE_STATUS varchar(200),
  CLOSURE_DATE_IF_CLOSED timestamp
);

ALTER TABLE dbo.SCCV_ALLOCATIONS_COMBINED
  ADD COLUMN TEAM_ID bigint;

ALTER TABLE dbo.SCCV_ALLOCATIONS_COMBINED
  ADD COLUMN SCCV_CREATED_AT timestamp;

ALTER TABLE dbo.SCCV_ALLOCATIONS_COMBINED
  ADD COLUMN SCCV_CREATED_BY varchar(300);

ALTER TABLE dbo.SCCV_ALLOCATIONS_COMBINED
  ADD COLUMN SCCV_LAST_MODIFIED_AT timestamp;

ALTER TABLE dbo.SCCV_ALLOCATIONS_COMBINED
  ADD COLUMN SCCV_LAST_MODIFIED_BY varchar(300);

-- workers and team support
CREATE TABLE DBO.SCCV_WORKER (
  ID bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT XPKDM_SCCV_WORKER PRIMARY KEY,
  EMAIL varchar(62) NOT NULL,
  FIRST_NAME varchar(100) NOT NULL,
  LAST_NAME varchar(100) NOT NULL,
  TEAM_ID bigint
);

ALTER TABLE DBO.SCCV_WORKER
    DROP COLUMN TEAM_ID;

ALTER TABLE DBO.SCCV_WORKER
    ADD COLUMN ROLE varchar(200);

ALTER TABLE DBO.SCCV_WORKER
    ADD COLUMN CONTEXT_FLAG varchar(1);

ALTER TABLE DBO.SCCV_WORKER
    ADD COLUMN CREATED_BY varchar(300);

ALTER TABLE DBO.SCCV_WORKER
    ADD COLUMN DATE_START timestamp;

ALTER TABLE DBO.SCCV_WORKER
    ADD COLUMN DATE_END timestamp;

ALTER TABLE DBO.SCCV_WORKER
    ADD COLUMN LAST_MODIFIED_BY varchar(300);

ALTER TABLE DBO.SCCV_WORKER
    ADD COLUMN CREATED_AT timestamp;

ALTER TABLE DBO.SCCV_WORKER
    ADD COLUMN LAST_MODIFIED_AT timestamp;

ALTER TABLE DBO.SCCV_WORKER
    ADD COLUMN IS_ACTIVE boolean;

ALTER TABLE DBO.SCCV_WORKER
  ADD CONSTRAINT sccv_worker_unique_email UNIQUE (EMAIL);

UPDATE DBO.SCCV_WORKER SET is_active = true WHERE is_active isnull;

CREATE TABLE DBO.SCCV_TEAM (
  ID bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT XPKDM_SCCV_TEAM PRIMARY KEY,
  NAME varchar(200) NOT NULL,
  CONTEXT varchar(1) NOT NULL
);

CREATE TABLE DBO.SCCV_WORKERTEAM (
  ID bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT XPK_SCCV_WORKERTEAM PRIMARY KEY,
  WORKER_ID bigint NOT NULL,
  TEAM_ID bigint NOT NULL
);

--phone numbers
CREATE TABLE dbo.DM_TELEPHONE_NUMBERS (
  TELEPHONE_NUMBER_ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PERSON_ID numeric(16) NOT NULL,
  TELEPHONE_NUMBER varchar(32),
  TELEPHONE_NUMBER_TYPE varchar(80) NOT NULL,
  CONSTRAINT XPKDM_TELEPHONE_NUMBERS PRIMARY KEY (TELEPHONE_NUMBER_ID, PERSON_ID)
);

ALTER TABLE dbo.dm_telephone_numbers
  ALTER COLUMN telephone_number_id RESTART SET START 500000 SET
  MINVALUE 500000;

ALTER TABLE dbo.dm_telephone_numbers
  ADD COLUMN SCCV_CREATED_AT timestamp;

ALTER TABLE dbo.dm_telephone_numbers
  ADD COLUMN SCCV_CREATED_BY varchar(300);

ALTER TABLE dbo.dm_telephone_numbers
  ADD COLUMN SCCV_LAST_MODIFIED_AT timestamp;

ALTER TABLE dbo.dm_telephone_numbers
  ADD COLUMN SCCV_LAST_MODIFIED_BY varchar(300);

--other names
CREATE TABLE dbo.SCCV_PERSON_OTHER_NAME (
  ID bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT XPKDM_SCCV_PERSON_OTHER_NAME PRIMARY KEY,
  PERSON_ID bigint,
  FIRST_NAME varchar(100),
  LAST_NAME varchar(100)
);

ALTER TABLE dbo.SCCV_PERSON_OTHER_NAME
  ADD COLUMN SCCV_CREATED_AT timestamp;

ALTER TABLE dbo.SCCV_PERSON_OTHER_NAME
  ADD COLUMN SCCV_CREATED_BY varchar(300);

ALTER TABLE dbo.SCCV_PERSON_OTHER_NAME
  ADD COLUMN SCCV_LAST_MODIFIED_AT timestamp;

ALTER TABLE dbo.SCCV_PERSON_OTHER_NAME
  ADD COLUMN SCCV_LAST_MODIFIED_BY varchar(300);

--audit table
CREATE TABLE dbo.sccv_audit (
  ID bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT XPK_SCCV_AUDIT PRIMARY KEY,
  TABLE_NAME varchar(200) NOT NULL,
  ENTITY_STATE varchar(50) NOT NULL,
  DATE_TIME timestamp NOT NULL,
  KEY_VALUES json,
  OLD_VALUES json,
  NEW_values json
);

--worker import
CREATE TABLE dbo.sccv_worker_import (
  AllocatedWorker varchar(300),
  FirstName varchar(300),
  Surname varchar(300),
  Email varchar(300),
  WorkerType varchar(300),
  team_name varchar(300)
);

--indexes to improve performance
CREATE INDEX dm_addresses_person_id_idx ON dbo.dm_addresses (person_id);

CREATE INDEX dm_telephone_numbers_person_id_idx ON dbo.dm_telephone_numbers (person_id);

--for restricted CFS cases management (manual updates to get backup restore data in sync)
CREATE TABLE dbo.sccv_cfs_restricted_flag_import (
  person_id varchar(20),
  restricted varchar(10),
  mosaic_id bigint
);

--warning notes
CREATE TABLE dbo.sccv_warning_note (
  ID bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT XPK_SCCV_WARNING_NOTE PRIMARY KEY,
  PERSON_ID bigint NOT NULL,
  START_DATE timestamp,
  REVIEW_DATE timestamp,
  END_DATE timestamp,
  LAST_REVIEW_DATE TIMESTAMP,
  NEXT_REVIEW_DATE TIMESTAMP,
  INDIVIDUAL_NOTIFIED boolean,
  NOTIFICATION_DETAILS varchar(1000),
  REVIEW_DETAILS varchar(1000),
  NOTE_TYPE varchar(50),
  STATUS varchar(50),
  DATE_INFORMED timestamp,
  HOW_INFORMED varchar(50),
  WARNING_NARRATIVE varchar(1000),
  MANAGERS_NAME varchar(100),
  DATE_MANAGER_INFORMED timestamp,
  SCCV_CREATED_AT timestamp,
  SCCV_CREATED_BY varchar(300),
  SCCV_LAST_MODIFIED_AT timestamp,
  SCCV_LAST_MODIFIED_BY varchar(300)
);

--warning notes review
CREATE TABLE dbo.sccv_warning_note_review(
  ID bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT XPK_SCCV_WARNING_NOTE_REVIEW PRIMARY KEY,
  Warning_Note_Id bigint NOT NULL,
  REVIEW_DATE TIMESTAMP,
  INDIVIDUAL_NOTIFIED boolean,
  NOTES varchar(1000),
  MANAGERS_NAME varchar(100),
  DATE_MANAGER_INFORMED timestamp,
  SCCV_CREATED_AT timestamp,
  SCCV_CREATED_BY varchar(300),
  SCCV_LAST_MODIFIED_AT timestamp,
  SCCV_LAST_MODIFIED_BY varchar(300)
);

CREATE TABLE IF NOT EXISTS dbo.sccv_personal_relationship_type (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT xpk_personal_relationship_type PRIMARY KEY,
    description varchar(300),
    inverse_type_id bigint
);

CREATE TABLE IF NOT EXISTS dbo.sccv_personal_relationship (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT xpk_personal_relationship PRIMARY KEY,
    fk_person_id bigint,
    fk_other_person_id bigint,
    fk_personal_relationship_type_id bigint,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone,
    is_informal_carer varchar(1),
    parental_responsibility varchar(1),
    sccv_created_at timestamp,
    sccv_created_by varchar(300),
    sccv_last_modified_at timestamp,
    sccv_last_modified_by varchar(300),
    CONSTRAINT fk_personal_relationship_type
        FOREIGN KEY(fk_personal_relationship_type_id)
        REFERENCES dbo.sccv_personal_relationship_type(id),
    CONSTRAINT fk_person
        FOREIGN KEY(fk_person_id)
        REFERENCES dbo.dm_persons(person_id),
    CONSTRAINT fk_other_person
        FOREIGN KEY(fk_other_person_id)
        REFERENCES dbo.dm_persons(person_id)
);

CREATE TABLE IF NOT EXISTS dbo.sccv_personal_relationship_detail (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT xpk_personal_relationship_detail PRIMARY KEY,
    fk_personal_relationship_id bigint,
    details varchar(1000),
    sccv_created_at timestamp,
    sccv_created_by varchar(300),
    sccv_last_modified_at timestamp,
    sccv_last_modified_by varchar(300),
    CONSTRAINT fk_personal_relationship
        FOREIGN KEY(fk_personal_relationship_id)
        REFERENCES dbo.sccv_personal_relationship(id)
);

-- add personal relationship types
insert into dbo.sccv_personal_relationship_type (description) VALUES ('greatGrandchild');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('greatGrandparent');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('grandchild');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('grandparent');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('parent');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('stepParent');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('auntUncle');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('child');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('stepChild');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('unbornChild');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('partner');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('exPartner');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('sibling');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('halfSibling');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('stepSibling');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('unbornSibling');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('spouse');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('cousin');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('nieceNephew');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('fosterCarer');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('friend');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('other');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('exSpouse');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('parentOfUnbornChild');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('siblingOfUnbornChild');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('fosterCarerSupportCarer');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('privateFosterCarer');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('privateFosterChild');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('fosterChild');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('supportCarerFosterCarer');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('neighbour');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('inContactWith');
insert into dbo.sccv_personal_relationship_type (description) VALUES ('acquaintance');

-- add inverse personal relationship types
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'greatGrandchild') where id = (select id from dbo.sccv_personal_relationship_type where description = 'greatGrandparent');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'greatGrandparent') where id = (select id from dbo.sccv_personal_relationship_type where description = 'greatGrandchild');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'grandchild') where id = (select id from dbo.sccv_personal_relationship_type where description = 'grandparent');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'grandparent') where id = (select id from dbo.sccv_personal_relationship_type where description = 'grandchild');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'parent') where id = (select id from dbo.sccv_personal_relationship_type where description = 'child');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'stepParent') where id = (select id from dbo.sccv_personal_relationship_type where description = 'stepChild');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'auntUncle') where id = (select id from dbo.sccv_personal_relationship_type where description = 'nieceNephew');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'child') where id = (select id from dbo.sccv_personal_relationship_type where description = 'parent');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'stepChild') where id = (select id from dbo.sccv_personal_relationship_type where description = 'stepParent');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'unbornChild') where id = (select id from dbo.sccv_personal_relationship_type where description = 'parentOfUnbornChild');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'partner') where id = (select id from dbo.sccv_personal_relationship_type where description = 'partner');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'exPartner') where id = (select id from dbo.sccv_personal_relationship_type where description = 'exPartner');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'sibling') where id = (select id from dbo.sccv_personal_relationship_type where description = 'sibling');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'halfSibling') where id = (select id from dbo.sccv_personal_relationship_type where description = 'halfSibling');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'stepSibling') where id = (select id from dbo.sccv_personal_relationship_type where description = 'stepSibling');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'unbornSibling') where id = (select id from dbo.sccv_personal_relationship_type where description = 'siblingOfUnbornChild');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'spouse') where id = (select id from dbo.sccv_personal_relationship_type where description = 'spouse');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'cousin') where id = (select id from dbo.sccv_personal_relationship_type where description = 'cousin');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'nieceNephew') where id = (select id from dbo.sccv_personal_relationship_type where description = 'auntUncle');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'fosterCarer') where id = (select id from dbo.sccv_personal_relationship_type where description = 'fosterChild');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'friend') where id = (select id from dbo.sccv_personal_relationship_type where description = 'friend');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'other') where id = (select id from dbo.sccv_personal_relationship_type where description = 'other');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'exSpouse') where id = (select id from dbo.sccv_personal_relationship_type where description = 'exSpouse');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'parentOfUnbornChild') where id = (select id from dbo.sccv_personal_relationship_type where description = 'unbornChild');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'siblingOfUnbornChild') where id = (select id from dbo.sccv_personal_relationship_type where description = 'unbornSibling');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'fosterCarerSupportCarer') where id = (select id from dbo.sccv_personal_relationship_type where description = 'supportCarerFosterCarer');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'privateFosterCarer') where id = (select id from dbo.sccv_personal_relationship_type where description = 'privateFosterChild');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'privateFosterChild') where id = (select id from dbo.sccv_personal_relationship_type where description = 'privateFosterCarer');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'fosterChild') where id = (select id from dbo.sccv_personal_relationship_type where description = 'fosterCarer');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'supportCarerFosterCarer') where id = (select id from dbo.sccv_personal_relationship_type where description = 'fosterCarerSupportCarer');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'neighbour') where id = (select id from dbo.sccv_personal_relationship_type where description = 'neighbour');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'inContactWith') where id = (select id from dbo.sccv_personal_relationship_type where description = 'inContactWith');
update dbo.sccv_personal_relationship_type set inverse_type_id = (select id from dbo.sccv_personal_relationship_type where description = 'acquaintance') where id = (select id from dbo.sccv_personal_relationship_type where description = 'acquaintance');

ALTER TABLE dbo.sccv_personal_relationship
  ADD COLUMN is_main_carer varchar(1);

--- deleted person records handling
ALTER TABLE dbo.dm_persons
  ADD COLUMN marked_for_deletion boolean;

ALTER TABLE dbo.dm_addresses
  ADD COLUMN marked_for_deletion boolean;

ALTER TABLE dbo.dm_telephone_numbers
  ADD COLUMN marked_for_deletion boolean;

ALTER TABLE dbo.sccv_person_other_name
  ADD COLUMN marked_for_deletion boolean;

ALTER TABLE dbo.sccv_allocations_combined
  ADD COLUMN marked_for_deletion boolean;

ALTER TABLE dbo.sccv_warning_note
  ADD COLUMN marked_for_deletion boolean;

ALTER TABLE dbo.sccv_personal_relationship
  ADD COLUMN marked_for_deletion boolean;

-- set default values for new records
ALTER TABLE dbo.dm_persons
  ALTER COLUMN marked_for_deletion SET DEFAULT FALSE;

ALTER TABLE dbo.dm_addresses
  ALTER COLUMN marked_for_deletion SET DEFAULT FALSE;

ALTER TABLE dbo.dm_telephone_numbers
  ALTER COLUMN marked_for_deletion SET DEFAULT FALSE;

ALTER TABLE dbo.sccv_person_other_name
  ALTER COLUMN marked_for_deletion SET DEFAULT FALSE;

ALTER TABLE dbo.sccv_allocations_combined
  ALTER COLUMN marked_for_deletion SET DEFAULT FALSE;

ALTER TABLE dbo.sccv_warning_note
  ALTER COLUMN marked_for_deletion SET DEFAULT FALSE;

ALTER TABLE dbo.sccv_personal_relationship
  ALTER COLUMN marked_for_deletion SET DEFAULT FALSE;

--update existing records
UPDATE dbo.dm_persons
  SET marked_for_deletion = FALSE;

UPDATE dbo.dm_addresses
  SET marked_for_deletion = FALSE;

UPDATE dbo.dm_telephone_numbers
  SET marked_for_deletion = FALSE;

UPDATE dbo.sccv_person_other_name
  SET marked_for_deletion = FALSE;

UPDATE dbo.sccv_allocations_combined
  SET marked_for_deletion = FALSE;

UPDATE dbo.sccv_warning_note
  SET marked_for_deletion = FALSE;

UPDATE dbo.sccv_personal_relationship
  SET marked_for_deletion = FALSE;

CREATE TABLE IF NOT EXISTS dbo.sccv_person_record_to_be_deleted (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT xpk_person_record_to_be_deleted PRIMARY KEY,
    fk_person_id_to_delete bigint,
    fk_master_person_id bigint,
    CONSTRAINT fk_deleted_record
        FOREIGN KEY(fk_person_id_to_delete)
        REFERENCES dbo.dm_persons(person_id),
    CONSTRAINT fk_master_record
        FOREIGN KEY(fk_master_person_id)
        REFERENCES dbo.dm_persons(person_id)
);

CREATE TABLE IF NOT EXISTS dbo.sccv_deleted_person_record (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT xpk_deleted_person_record PRIMARY KEY,
    deleted_person_id bigint,
    master_person_id bigint,
    timestamp timestamp NOT NULL DEFAULT now()
);

CREATE TABLE IF NOT EXISTS dbo.sccv_request_audit(
   id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL CONSTRAINT xpk_sccv_request_audit PRIMARY KEY,
   timestamp timestamp NOT NULL,
   action_name varchar(200) NOT NULL,
   user_name varchar(200) NOT NULL,
   metadata json NOT NULL
);


CREATE TABLE IF NOT EXISTS dbo.sccv_case_status_type (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  name varchar(3),
  description varchar(256)
);

CREATE TABLE IF NOT EXISTS dbo.sccv_case_status_subtype (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  fk_case_status_type_id bigint,
  name varchar(3),
  description varchar(256)
);

CREATE TABLE IF NOT EXISTS dbo.sccv_person_case_status (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  fk_person_id bigint,
  fk_case_status_type_id bigint,
  fk_case_status_subtype_id bigint,
  start_date timestamp without time zone NOT NULL,
  end_date timestamp without time zone,
  notes text,
  sccv_created_at timestamp,
  sccv_created_by varchar(300),
  sccv_last_modified_at timestamp,
  sccv_last_modified_by varchar(300),
  PRIMARY KEY( id )
);

INSERT INTO dbo.sccv_case_status_type(name, description) VALUES ('CIN', 'Child in need');

INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N1', 'Abuse or neglect');
INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N2', 'Child’s disability');
INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N3', 'Parental disability or illness');
INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N4', 'Family in acute stress');
INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N5', 'Family dysfunction');
INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N6', 'Socially unacceptable behaviour');
INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N7', 'Low income');
INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N8', 'Absent parenting');
INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N9', 'Cases other than children in need');
INSERT INTO dbo.sccv_case_status_subtype(fk_case_status_type_id, name, description) VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'N0', 'Not stated');

CREATE TABLE IF NOT EXISTS dbo.sccv_case_status_field
(
  id                     bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  fk_case_status_type_id bigint,
  name                   varchar(256),
  description            varchar(256),
  CONSTRAINT fk_case_status
    FOREIGN KEY (fk_case_status_type_id)
      REFERENCES dbo.sccv_case_status_type (id)
);

INSERT INTO dbo.sccv_case_status_field(fk_case_status_type_id, name, description)
VALUES ((select id from dbo.sccv_case_status_type where name ilike 'CIN'), 'placementReason',
        'What is the latest primary reason for placement? (Primary need code)');

CREATE TABLE IF NOT EXISTS dbo.sccv_case_status_field_option
(
  id                           bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  fk_sccv_case_status_field_id bigint,
  name                         varchar(256),
  description                  varchar(256),
  CONSTRAINT fk_case_status_field
    FOREIGN KEY (fk_sccv_case_status_field_id)
      REFERENCES dbo.sccv_case_status_field (id)
);

INSERT INTO dbo.sccv_case_status_field_option(fk_sccv_case_status_field_id, name, description)
VALUES
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N1', 'Abuse or neglect'),
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N2', 'Child’s disability'),
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N3', 'Parental disability or illness'),
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N4', 'Family in acute stress'),
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N5', 'Family dysfunction'),
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N6', 'Socially unacceptable behaviour'),
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N7', 'Low income'),
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N8', 'Absent parenting'),
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N9', 'Cases other than children in need'),
  ((select id from dbo.sccv_case_status_field where name ilike 'placementReason'), 'N0', 'Not stated');

CREATE TABLE IF NOT EXISTS dbo.sccv_person_case_status_field_option
(
  id                             bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  fk_person_case_status_id       bigint,
  fk_case_status_field_option_id bigint,
  PRIMARY KEY (fk_person_case_status_id, fk_case_status_field_option_id),
  CONSTRAINT fk_person_case_status
    FOREIGN KEY (fk_person_case_status_id)
      REFERENCES dbo.sccv_person_case_status (id),
  CONSTRAINT fk_case_status_field_option
    FOREIGN KEY (fk_case_status_field_option_id)
      REFERENCES dbo.sccv_case_status_field_option (id)
);

ALTER TABLE IF EXISTS dbo.sccv_person_case_status
  DROP COLUMN fk_case_status_subtype_id;

DROP TABLE IF EXISTS dbo.sccv_case_status_subtype;

ALTER TABLE IF EXISTS dbo.sccv_person_case_status
  ADD CONSTRAINT fk_person
    FOREIGN KEY (fk_person_id)
      REFERENCES dbo.dm_persons (person_id);

ALTER TABLE IF EXISTS dbo.sccv_person_case_status
  ADD CONSTRAINT fk_case_status_type
    FOREIGN KEY (fk_case_status_type_id)
      REFERENCES dbo.sccv_case_status_type (id);

ALTER TABLE IF EXISTS dbo.sccv_case_status_type
  ALTER COLUMN name TYPE varchar(256) USING name::varchar(256);

INSERT INTO DBO.SCCV_CASE_STATUS_TYPE(NAME, DESCRIPTION) VALUES ('CP','Child protection');

INSERT INTO DBO.SCCV_CASE_STATUS_FIELD(FK_CASE_STATUS_TYPE_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_TYPE WHERE NAME ILIKE 'CP'), 'category', 'Category of Child Protection Plan');

INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'category'), 'C1','Neglect' );
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'category'), 'C2','Physical Abuse' );
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'category'), 'C3','Emotional Abuse' );
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'category'), 'C4','Sexual Abuse' );

INSERT INTO dbo.sccv_case_status_type(name, description) VALUES ('LAC', 'Looked After Child');

INSERT INTO dbo.sccv_case_status_field(fk_case_status_type_id, name, description)
VALUES ((select id from dbo.sccv_case_status_type where name ilike 'LAC'), 'legalStatus',
 'What is the child legal status?');

INSERT INTO dbo.sccv_case_status_field(fk_case_status_type_id, name, description)
VALUES ((select id from dbo.sccv_case_status_type where name ilike 'LAC'), 'placementType',
 'What is the latest the placement type?');

INSERT INTO dbo.sccv_case_status_field(fk_case_status_type_id, name, description)
VALUES ((select id from dbo.sccv_case_status_type where name ilike 'LAC'), 'reasonCeased',
 'What is the reason for the episode ending?');

ALTER TABLE DBO.SCCV_CASE_STATUS_FIELD_OPTION ALTER COLUMN description TYPE varchar(512);

INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'A3', 'Placed for adoption with parental/guardian consent with current foster carer(s) (under Section 19 of the Adoption and Children Act 2002) or with a freeing order where parental/guardian consent has been given (under Section 18(1)(a) of the Adoption Act 1976)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'A4', 'Placed for adoption with parental/guardian consent not with current foster carer(s) (under Section 19 of the Adoption and Children Act 2002) or with a freeing order where parental/guardian consent has been given under Section 18(1)(a) of the Adoption Act 1976');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'A5', 'Placed for adoption with placement order with current foster carer(s) (under Section 21 of the Adoption and Children Act 2002) or with a freeing order where parental/guardian consent was dispensed with (under Section 18(1)(b) the Adoption Act 1976)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'A6', 'Placed for adoption with placement order not with current foster carer(s) (under Section 21 of the Adoption and Children Act 2002) or with a freeing order where parental/guardian consent was dispensed with (under Section 18(1)(b) of the Adoption Act 1976)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'H5', 'Semi-independent living accommodation not subject to children’s homes regulations');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'K1', 'Secure children’s homes');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'K2', 'Children’s Homes subject to Children’s Homes Regulations P1 Placed with own parent(s) or other person(s) with parental responsibility');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'P2', 'Independent living for example in a flat, lodgings, bedsit, bed and breakfast (B&B) or with friends, with or without formal support');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'P3', 'Residential employment');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'R1', 'Residential care home');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'R2', 'National Health Service (NHS)/health trust or other establishment providing medical or nursing care');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'R3', 'Family centre or mother and baby unit');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'R5', 'Young offender institution (YOI)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'S1', 'All residential schools, except where dual-registered as a school and children’s home');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'T0', 'All types of temporary move (see paragraphs above for further details)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'T1', 'Temporary periods in hospital');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'T2', 'Temporary absences of the child on holiday');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'T3', 'Temporary accommodation whilst normal foster carer(s) is/are on holiday');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'T4', 'Temporary accommodation of seven days or less, for any reason, not covered by codes T1 to T3');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'U1', 'Foster placement with relative(s) or friend(s) – long term fostering');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'U2', 'Fostering placement with relative(s) or friend(s) who is/are also an approved adopter(s) – fostering for adoption /concurrent planning');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'U3', 'Fostering placement with relative(s) or friend(s) who is/are not longterm or fostering for adoption /concurrent planning');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'U4', 'Foster placement with other foster carer(s) – long term fostering');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'U5', 'Foster placement with other foster carer(s) who is/are also an approved adopter(s) – fostering for adoption /concurrent planning');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'U6', 'Foster placement with other foster carer(s) – not long term or fostering for adoption /concurrent planning');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'placementType'), 'Z1', 'Other placements (must be listed on a schedule sent to DfE with annual submission)');

INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'C1',  'Interim care order');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'C2',  'Full care order');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'D1',  'Freeing order granted');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'E1',  'Placement order granted');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'V2',  'Single period of accommodation under section 20 (Children Act 1989)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'V3',  'Accommodated under an agreed series of short-term breaks, when individual episodes of care are recorded');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'V4',  'Accommodated under an agreed series of short-term breaks, when agreements are recorded (NOT individual episodes of care)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'L1',  'Under police protection and in local authority accommodation');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'L2',  'Emergency protection order (EPO)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'L3',  'Under child assessment order and in local authority accommodation');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'J1',  'Remanded to local authority accommodation or to youth detention accommodation');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'J2',  'Placed in local authority accommodation under the Police and Criminal Evidence Act 1984, including secure accommodation. However, this would not necessarily be accommodation where the child would be detained.');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'legalStatus'), 'J3',  'Sentenced to Youth Rehabilitation Order (Criminal Justice and Immigration Act 2008 as amended by Legal Aid, Sentencing and Punishment of Offenders Act (LASPOA) 2012 with residence or intensive fostering requirement)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'X1'  , 'Episode ceases, and new episode begins on same day, for any reason');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E11' , 'Adopted - application for an adoption order unopposed');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E12' , 'Adopted – consent dispensed with by the court');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E2'  , 'Died');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E3'  , 'Care taken over by another local authority in the UK');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E4A' , 'Returned home to live with parent(s), relative(s), or other person(s) with parental responsibility as part of the care planning process (not under a special guardianship order or residence order or (from 22 April 2014) a child arrangement order).');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E4B' , 'Returned home to live with parent(s), relative(s), or other person(s) with parental responsibility which was not part of the current care planning process (not under a special guardianship order or residence order or (from 22 April 2014) a child arrangement order).');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E13' , 'Left care to live with parent(s), relative(s), or other person(s) with no parental responsibility.');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E41' , 'Residence order (or, from 22 April 2014, a child arrangement order which sets out with whom the child is to live) granted');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E45' , 'Special guardianship order made to former foster carer(s), who was/are a relative(s) or friend(s)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E46' , 'Special guardianship order made to former foster carer(s), other than relative(s) or friend(s)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E47' , 'Special guardianship order made to carer(s), other than former foster carer(s), who was/are a relative(s) or friend(s)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E48' , 'Special guardianship order made to carer(s), other than former foster carer(s), other than relative(s) or friend(s)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E5'  , 'Moved into independent living arrangement and no longer looked-after: supportive accommodation providing formalised advice/support arrangements (such as most hostels, young men’s Christian association, foyers, staying close and care leavers projects). Includes both children leaving care before and at age 18');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E6'  , 'Moved into independent living arrangement and no longer looked-after : accommodation providing no formalised advice/support arrangements (such as bedsit, own flat, living with friend(s)). Includes both children leaving care before and at age 18');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E7'  , 'Transferred to residential care funded by adult social care services');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E9'  , 'Sentenced to custody');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E14' , 'Accommodation on remand ended');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E15' , 'Age assessment determined child is aged 18 or over and E5, E6 and E7 do not apply, such as an unaccompanied asylum-seeking child (UASC) whose age has been disputed');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E16' , 'Child moved abroad');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E17' , 'Aged 18 (or over) and remained with current carers (inc under staying put arrangements)');
INSERT INTO DBO.SCCV_CASE_STATUS_FIELD_OPTION(FK_SCCV_CASE_STATUS_FIELD_ID, NAME, DESCRIPTION) VALUES ((SELECT ID FROM DBO.SCCV_CASE_STATUS_FIELD WHERE NAME ILIKE 'reasonCeased'), 'E8'  , 'Period of being looked-after ceased for any other reason (where none of the other reasons apply)');

alter table  IF EXISTS dbo.sccv_person_case_status_field_option ADD COLUMN created_date timestamp;

alter table  IF EXISTS dbo.sccv_person_case_status_field_option ADD COLUMN start_date timestamp;

--altering person_case_status
ALTER TABLE IF EXISTS dbo.sccv_person_case_status
  RENAME COLUMN fk_case_status_type_id TO case_status_type;

ALTER TABLE dbo.sccv_person_case_status DROP CONSTRAINT fk_case_status_type;

ALTER TABLE IF EXISTS dbo.sccv_person_case_status
  ALTER COLUMN case_status_type TYPE varchar(256);
ALTER TABLE dbo.sccv_person_case_status
  ADD COLUMN discarded_at timestamp;
--creating table to store answers
CREATE TABLE IF NOT EXISTS dbo.sccv_person_case_status_answers
(
  id                             bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  fk_person_case_status_id       bigint,
  option varchar(512),
  value varchar(512),
  start_date timestamp,
  sccv_created_at timestamp,
  sccv_created_by varchar(300),
  sccv_last_modified_at timestamp,
  sccv_last_modified_by varchar(300),
  CONSTRAINT fk_case_status
    FOREIGN KEY(fk_person_case_status_id)
      REFERENCES dbo.sccv_person_case_status(id)
);
--dropping unused tables
DROP TABLE IF EXISTS dbo.sccv_person_case_status_field_option;
DROP TABLE IF EXISTS DBO.SCCV_CASE_STATUS_FIELD_OPTION;
DROP TABLE IF EXISTS DBO.SCCV_CASE_STATUS_FIELD;
DROP TABLE IF EXISTS DBO.SCCV_CASE_STATUS_TYPE;

ALTER TABLE dbo.sccv_person_case_status
  DROP COLUMN discarded_at;

ALTER TABLE dbo.sccv_person_case_status_answers
  ADD COLUMN discarded_at timestamp;

ALTER TABLE dbo.sccv_person_case_status_answers
  ADD COLUMN group_id varchar(36) not null;

ALTER TABLE dbo.sccv_person_case_status_answers
	ADD COLUMN end_date timestamp;

  --MASH tables
  CREATE TABLE IF NOT EXISTS dbo.REF_MASH_REFERRALS
(
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  referrer varchar(256),
  requested_support varchar(256),
  worker_id bigint,
  created_at timestamp,
  referral_doc_url varchar(256),
  stage varchar(30),
  referral_category varchar(256),
  initial_decision varchar(256),
  initial_decision_referral_category varchar(256),
  initial_decision_urgent_contact bool,
  initial_decision_created_at timestamp,
  screening_decision varchar(256),
  screening_decision_urgent_contact bool,
  screening_decision_created_at timestamp,
  final_decision varchar(256),
  final_decision_referral_category varchar(256),
  final_decision_urgent_contact bool,
  final_decision_created_at timestamp,
  sccv_created_at timestamp,
  sccv_created_by varchar(300),
  sccv_last_modified_at timestamp,
  sccv_last_modified_by varchar(300)
);

CREATE TABLE IF NOT EXISTS dbo.REF_MASH_RESIDENTS
(
	id  bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	first_name varchar(50),
	last_name varchar (50),
	dob date,
	gender varchar,
	ethnicity varchar(33),
	first_language varchar(100),
	school varchar(100),
	address varchar,
	postcode varchar(20),
	fk_ref_mash_referrals_id bigint,
	sccv_residents_id bigint,
  CONSTRAINT fk_mash_referrals
	FOREIGN KEY (fk_ref_mash_referrals_id)
	  REFERENCES dbo.ref_mash_referrals (id)
);

ALTER TABLE IF EXISTS dbo.sccv_person_case_status
	ALTER start_date type timestamp;

ALTER TABLE IF EXISTS dbo.sccv_person_case_status
	ALTER end_date type timestamp;

alter table if exists dbo.ref_mash_referrals
add column contact_decision_created_at timestamp,
add column contact_decision_urgent_contact bool;

CREATE TABLE IF NOT EXISTS dbo.sccv_uprn_update
(
	id  bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	address_id bigint NOT NULL,
	uprn bigint NOT NULL
);

CREATE TABLE if not exists dbo.DM_KEY_CONTACTS (
  KEY_CONTACT_ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PERSON_ID numeric(16) NOT NULL,
  NAME varchar(255),
  EMAIL varchar(240),
  CONSTRAINT XPKDM_KEY_CONTACTS PRIMARY KEY (KEY_CONTACT_ID, PERSON_ID)
);

CREATE TABLE if not exists dbo.DM_OTHER_EMAIL_ADDRESSES (
  EMAIL_ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PERSON_ID numeric(16) NOT NULL,
  EMAIL varchar(240),
  CONSTRAINT XPKDM_EMAILS PRIMARY KEY (EMAIL_ID, PERSON_ID)
);


CREATE TABLE if not exists dbo.DM_GP_DETAILS (
  GP_DETAILS_ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PERSON_ID numeric(16) NOT NULL,
  NAME varchar,
  ADDRESS varchar,
  POSTCODE varchar,
  PHONE_NUMBER varchar,
  EMAIL varchar,
  CONSTRAINT XPKDM_GP_DETAILS PRIMARY KEY (GP_DETAILS_ID, PERSON_ID)
);

CREATE TABLE if not exists dbo.DM_TECH_USE (
  TECH_USE_ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PERSON_ID numeric(16) NOT NULL,
  TECH_TYPE varchar,
  CONSTRAINT XPKDM_TECH_USE PRIMARY KEY (TECH_USE_ID, PERSON_ID)
);

CREATE TABLE if not exists dbo.DM_DISABILITY (
  DISABILITY_ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PERSON_ID numeric(16) NOT NULL,
  DISABILITY_TYPE varchar,
  CONSTRAINT XPKDM_DISABILITY PRIMARY KEY (DISABILITY_ID, PERSON_ID)
);

alter table if exists dbo.dm_persons
  add column pronoun varchar(20),
  add column gender_assigned_at_birth bool,
  add column preferred_language varchar(100),
  add column fluent_in_english bool,
  add column interpreter_needed bool,
  add column communication_difficulties bool,
  add column difficulty_making_decisions bool,
  add column communication_difficulties_details varchar,
  add column employment varchar,
  add column immigration_status varchar,
  add column primary_support_reason varchar,
  add column care_provider varchar,
  add column tenure_type varchar,
  add column accomodation_type varchar,
  add column access_to_home varchar,
  add column housing_officer varchar,
  add column living_situation varchar,
  add column housing_staff_in_contact bool,
  add column cautionary_alert bool,
  add column posession_eviction_order varchar,
  add column rent_record varchar,
  add column housing_benefit varchar,
  add column council_tenure_type varchar,
  add column tenancy_household_structure varchar,
  add column mental_health_section_status varchar,
  add column deaf_register varchar,
  add column blind_register varchar,
  add column blue_badge varchar,
  add column open_case bool,
  add column allocated_team varchar;

CREATE TABLE if not exists dbo.DM_EMAIL_ADDRESSES (
  EMAIL_ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PERSON_ID numeric(16) NOT NULL,
  EMAIL varchar(240),
  TYPE varchar(240),
  CONSTRAINT XPKDM_EMAIL_ADDRESSES PRIMARY KEY (EMAIL_ID, PERSON_ID)
  );

DROP TABLE IF EXISTS dbo.DM_PERSON_LAST_UPDATED;

CREATE TABLE if not exists dbo.DM_PERSON_LAST_UPDATED (
  PERSON_LAST_UPDATED_ID integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  PERSON_ID numeric(16) NOT NULL,
  TYPE varchar(240),
  UPDATED_AT timestamp,
  CONSTRAINT XPKDM_PERSON_LAST_UPDATED PRIMARY KEY (PERSON_LAST_UPDATED_ID, PERSON_ID)
  );


ALTER TABLE dbo.DM_PERSONS
ALTER COLUMN GENDER TYPE varchar(255);
